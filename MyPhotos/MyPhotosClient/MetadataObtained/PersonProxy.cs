//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotosCore.Context
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/MyPhotosCore.Context", IsReference=true)]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private int PersonIdField;
        
        private MyPhotosCore.Context.Photo[] PhotosField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonId
        {
            get
            {
                return this.PersonIdField;
            }
            set
            {
                this.PersonIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyPhotosCore.Context.Photo[] Photos
        {
            get
            {
                return this.PhotosField;
            }
            set
            {
                this.PhotosField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IPerson")]
public interface IPerson
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPeople", ReplyAction="http://tempuri.org/IPerson/GetPeopleResponse")]
    MyPhotosCore.Context.Person[] GetPeople();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPeople", ReplyAction="http://tempuri.org/IPerson/GetPeopleResponse")]
    System.Threading.Tasks.Task<MyPhotosCore.Context.Person[]> GetPeopleAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPerson", ReplyAction="http://tempuri.org/IPerson/GetPersonResponse")]
    MyPhotosCore.Context.Person GetPerson(int personId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPerson", ReplyAction="http://tempuri.org/IPerson/GetPersonResponse")]
    System.Threading.Tasks.Task<MyPhotosCore.Context.Person> GetPersonAsync(int personId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/AddPerson", ReplyAction="http://tempuri.org/IPerson/AddPersonResponse")]
    void AddPerson(MyPhotosCore.Context.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/AddPerson", ReplyAction="http://tempuri.org/IPerson/AddPersonResponse")]
    System.Threading.Tasks.Task AddPersonAsync(MyPhotosCore.Context.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/VerifyPersonExists", ReplyAction="http://tempuri.org/IPerson/VerifyPersonExistsResponse")]
    bool VerifyPersonExists(MyPhotosCore.Context.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/VerifyPersonExists", ReplyAction="http://tempuri.org/IPerson/VerifyPersonExistsResponse")]
    System.Threading.Tasks.Task<bool> VerifyPersonExistsAsync(MyPhotosCore.Context.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPeopleOfPhoto", ReplyAction="http://tempuri.org/IPerson/GetPeopleOfPhotoResponse")]
    MyPhotosCore.Context.Person[] GetPeopleOfPhoto(MyPhotosCore.Context.Photo photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPeopleOfPhoto", ReplyAction="http://tempuri.org/IPerson/GetPeopleOfPhotoResponse")]
    System.Threading.Tasks.Task<MyPhotosCore.Context.Person[]> GetPeopleOfPhotoAsync(MyPhotosCore.Context.Photo photo);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/SearchByFullName", ReplyAction="http://tempuri.org/IPerson/SearchByFullNameResponse")]
    MyPhotosCore.Context.Person SearchByFullName(string fullName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/SearchByFullName", ReplyAction="http://tempuri.org/IPerson/SearchByFullNameResponse")]
    System.Threading.Tasks.Task<MyPhotosCore.Context.Person> SearchByFullNameAsync(string fullName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/AddPhotoToPerson", ReplyAction="http://tempuri.org/IPerson/AddPhotoToPersonResponse")]
    void AddPhotoToPerson(MyPhotosCore.Context.Photo photo, MyPhotosCore.Context.Person person);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/AddPhotoToPerson", ReplyAction="http://tempuri.org/IPerson/AddPhotoToPersonResponse")]
    System.Threading.Tasks.Task AddPhotoToPersonAsync(MyPhotosCore.Context.Photo photo, MyPhotosCore.Context.Person person);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IPersonChannel : IPerson, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class PersonClient : System.ServiceModel.ClientBase<IPerson>, IPerson
{
    
    public PersonClient()
    {
    }
    
    public PersonClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public PersonClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PersonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PersonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public MyPhotosCore.Context.Person[] GetPeople()
    {
        return base.Channel.GetPeople();
    }
    
    public System.Threading.Tasks.Task<MyPhotosCore.Context.Person[]> GetPeopleAsync()
    {
        return base.Channel.GetPeopleAsync();
    }
    
    public MyPhotosCore.Context.Person GetPerson(int personId)
    {
        return base.Channel.GetPerson(personId);
    }
    
    public System.Threading.Tasks.Task<MyPhotosCore.Context.Person> GetPersonAsync(int personId)
    {
        return base.Channel.GetPersonAsync(personId);
    }
    
    public void AddPerson(MyPhotosCore.Context.Person person)
    {
        base.Channel.AddPerson(person);
    }
    
    public System.Threading.Tasks.Task AddPersonAsync(MyPhotosCore.Context.Person person)
    {
        return base.Channel.AddPersonAsync(person);
    }
    
    public bool VerifyPersonExists(MyPhotosCore.Context.Person person)
    {
        return base.Channel.VerifyPersonExists(person);
    }
    
    public System.Threading.Tasks.Task<bool> VerifyPersonExistsAsync(MyPhotosCore.Context.Person person)
    {
        return base.Channel.VerifyPersonExistsAsync(person);
    }
    
    public MyPhotosCore.Context.Person[] GetPeopleOfPhoto(MyPhotosCore.Context.Photo photo)
    {
        return base.Channel.GetPeopleOfPhoto(photo);
    }
    
    public System.Threading.Tasks.Task<MyPhotosCore.Context.Person[]> GetPeopleOfPhotoAsync(MyPhotosCore.Context.Photo photo)
    {
        return base.Channel.GetPeopleOfPhotoAsync(photo);
    }
    
    public MyPhotosCore.Context.Person SearchByFullName(string fullName)
    {
        return base.Channel.SearchByFullName(fullName);
    }
    
    public System.Threading.Tasks.Task<MyPhotosCore.Context.Person> SearchByFullNameAsync(string fullName)
    {
        return base.Channel.SearchByFullNameAsync(fullName);
    }
    
    public void AddPhotoToPerson(MyPhotosCore.Context.Photo photo, MyPhotosCore.Context.Person person)
    {
        base.Channel.AddPhotoToPerson(photo, person);
    }
    
    public System.Threading.Tasks.Task AddPhotoToPersonAsync(MyPhotosCore.Context.Photo photo, MyPhotosCore.Context.Person person)
    {
        return base.Channel.AddPhotoToPersonAsync(photo, person);
    }
}
